import string
import sys
import numpy as np
from PIL import Image
np.set_printoptions(threshold=sys.maxsize)
abjad = string.printable

def enkrip (pesan):
    global abjad

    key = int (input ('Masukkan key : '))
    cipher= ''
    for i in pesan :
        if i in abjad:
            k = abjad.find(i)
            k = (k+key)%100
            cipher = cipher + abjad[k]
        else:
            cipher = cipher + i

    return cipher


def dekrip (cipher):
    global abjad

    key = int (input ('Masukkan key : '))
    pesan= ''
    for i in cipher :
        if i in abjad:
            k = abjad.find(i)
            k = (k-key)%100
            pesan = pesan + abjad[k]
        else:
            pesan = pesan + i

    return pesan


#encoding function
def Encode(src, message, dest):

    img = Image.open(src, 'r')
    width, height = img.size
    array = np.array(list(img.getdata()))

    if img.mode == 'RGB':
        n = 3
        m = 0
    elif img.mode == 'RGBA':
        n = 4
        m = 1

    total_pixels = array.size//n

    message += "$t3g0"
    b_message = ''.join([format(ord(i), "08b") for i in message])
    req_pixels = len(b_message)

    if req_pixels > total_pixels:
        print("ERROR: Need larger file size")

    else:
        index=0
        for p in range(total_pixels):
            for q in range(m, n):
                if index < req_pixels:
                    array[p][q] = int(bin(array[p][q])[2:9] + b_message[index], 2)
                    index += 1

        array=array.reshape(height, width, n)
        enc_img = Image.fromarray(array.astype('uint8'), img.mode)
        enc_img.save(dest)
        print("Image Encoded Successfully")

#decoding function
def Decode(src):

    img = Image.open(src, 'r')
    array = np.array(list(img.getdata()))

    if img.mode == 'RGB':
        n = 3
        m = 0
    elif img.mode == 'RGBA':
        n = 4
        m = 1

    total_pixels = array.size//n

    hidden_bits = ""
    for p in range(total_pixels):
        for q in range(m, n):
            hidden_bits += (bin(array[p][q])[2:][-1])

    hidden_bits = [hidden_bits[i:i+8] for i in range(0, len(hidden_bits), 8)]

    message = ""
    for i in range(len(hidden_bits)):
        if message[-5:] == "$t3g0":
            break
        else:
            message += chr(int(hidden_bits[i], 2))
    if "$t3g0" in message:
        print("Hidden Message:", message[:-5])
    else:
        print("No Hidden Message Found")


#main function
if __name__ == '__main__':
    print('---------------------')
    print('---------------------')
    print('By : Kelompok 5')
    print('Afnan, Usu, M. Rafiqi')
    print('---------------------')
    print('---------------------')
    pilihan = int (input ('1. Enkripsi\n2. Dekripsi\n----------\nPilih mode :'))
   
    if pilihan == 1:
        print("Masukkan Format Gambar")
        src = input()
        pesan = input ('Masukkan pesan (Plaintext) : ')
        print (enkrip(pesan))
        print("Enter Message to Hide")
        message = input()
        print("Enter Destination Image Path")
        dest = input()
        print("Encoding...")
        Encode(src, message, dest)

    elif pilihan ==2:
        print("Enter Source Image Path")
        src = input()
        print("Decoding...")
        Decode(src)
        cipher = input ('Masukkan pesan (CipherText) : ')
        print (dekrip(cipher))
        
    else:
        print ('Masukkan pilihan 1 atau 2 !!')
